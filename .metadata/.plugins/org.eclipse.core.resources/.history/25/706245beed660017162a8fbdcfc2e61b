package org.openhab.training.electricity.radio;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;

import org.openhab.training.electricity.consumer.ElectricityConsumer;
import org.openhab.training.electricity.homenetwork.HomeElectricityNetwork;
import org.openhab.training.electricity.provider.ElectricityProvider;
import org.osgi.framework.BundleContext;
import org.osgi.framework.FrameworkUtil;
import org.osgi.framework.ServiceReference;

public class BasicRadio implements ElectricityConsumer {

    protected final int RADIO_CONSUMPTION = 5;

    protected final int BROADCAST_PERIOD = 5;

    protected ElectricityProvider currentElectricityProvider;

    List<ElectricityProvider> availableProviders;

    ScheduledExecutorService executor = Executors.newSingleThreadExecutor();

    @Override
    public void startConsuming() {
        setCurrentElectricityProviderAtStart();

    }

    @Override
    public void stopConsuming() {

    }

    @Override
    public void setCurrentProvider(ElectricityProvider provider) {
        currentElectricityProvider = provider;
    }

    public ElectricityProvider getCurrentElectricityProvider() {
        return this.currentElectricityProvider;
    }

    public void setCurrentElectricityProviderAtStart() {
        if (!getAllAvailableProviders().isEmpty()) {
            currentElectricityProvider = getAllAvailableProviders().get(0);
        } else {
            System.out.println("There is providers in list...");
        }
    }

    @Override
    public List<ElectricityProvider> getAllAvailableProviders() {
        availableProviders = new ArrayList<>();
        BundleContext bundleContext = FrameworkUtil.getBundle(this.getClass()).getBundleContext();
        try {
            ServiceReference[] services = bundleContext.getServiceReferences(ElectricityProvider.class.getName(), null);
            if (services != null) {
                for (int i = 0; i < services.length; i++) {
                    ElectricityProvider provider = (ElectricityProvider) bundleContext.getService(services[i]);
                    if (provider instanceof HomeElectricityNetwork) {
                        availableProviders.add(provider);
                    }
                }

            }
        } catch (Exception e) {
            System.out.println("Something bad has happened...");
        }

        return availableProviders;
    }

}